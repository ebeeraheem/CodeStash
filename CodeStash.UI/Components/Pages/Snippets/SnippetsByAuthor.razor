@page "/snippets/authors/{userName}"
@inject ISnippetService SnippetService

<MudProgressCircular Indeterminate="true" Color="Color.Primary"
                     Style="@($"margin:auto; display: block;{(_isLoading ? "display:block;" : "display:none")}")"
                     Size="Size.Medium" StrokeWidth="4" />

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <MudAlert Severity="Severity.Error">
        @ErrorMessage
    </MudAlert>

    <MudButton Variant="Variant.Outlined" Color="Color.Primary">
        Go Back to Home
    </MudButton>
}
else
{
    <MudText Typo="Typo.h2" Class="mt-8">
        <MudAvatar Color="Color.Primary" Variant="Variant.Outlined">@UserName[0]</MudAvatar>
        @UserName
    </MudText>
    <MudGrid>
        @foreach (var snippetDto in SnippetDtos)
        {
            <SnippetGridItem SnippetDto="snippetDto" />
        }
    </MudGrid>
}

@code {
    [Parameter]
    public string UserName { get; set; } = string.Empty;
    public List<SnippetDto> SnippetDtos { get; set; } = [];
    private string? ErrorMessage { get; set; }
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        var result = await SnippetService.GetSnippetsByAuthorUserName(UserName);

        _isLoading = false;

        if (result.IsSuccess)
        {
            SnippetDtos = result.Data;
        }
        else
        {
            ErrorMessage = result.Error.ToString();
        }
    }
}
